# Email Storage Service Docker Compose
# Integrates with existing Supabase stack

version: '3.8'

services:
  email-sync:
    container_name: privacy-email-sync
    build: .
    restart: unless-stopped
    environment:
      # Fastmail Configuration
      - FASTMAIL_CLIENT_ID=${FASTMAIL_CLIENT_ID}
      - FASTMAIL_CLIENT_SECRET=${FASTMAIL_CLIENT_SECRET}
      - FASTMAIL_REDIRECT_URI=${FASTMAIL_REDIRECT_URI}
      - FASTMAIL_SCOPE=${FASTMAIL_SCOPE}
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Application Configuration
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Sync Configuration
      - SYNC_INTERVAL_MINUTES=${SYNC_INTERVAL_MINUTES:-15}
      - BATCH_SIZE=${BATCH_SIZE:-100}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - RETRY_DELAY_MS=${RETRY_DELAY_MS:-5000}
      
      # Security Configuration
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      
      # Monitoring Configuration
      - HEALTH_CHECK_INTERVAL_MS=${HEALTH_CHECK_INTERVAL_MS:-60000}
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    
    networks:
      - proxy
    
    # depends_on:
    #   - supabase-db
    #   - supabase-kong
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.email-sync.rule=Host(`email-sync.privacy.ranch.sh`)"
      - "traefik.http.routers.email-sync.entrypoints=websecure"
      - "traefik.http.routers.email-sync.tls=true"
      - "traefik.http.routers.email-sync.tls.certresolver=letsencrypt"
      - "traefik.http.services.email-sync.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  oauth-handler:
    container_name: privacy-oauth-handler
    build: .
    command: npm run oauth
    restart: unless-stopped
    environment:
      # Fastmail Configuration
      - FASTMAIL_CLIENT_ID=${FASTMAIL_CLIENT_ID}
      - FASTMAIL_CLIENT_SECRET=${FASTMAIL_CLIENT_SECRET}
      - FASTMAIL_REDIRECT_URI=${FASTMAIL_REDIRECT_URI}
      - FASTMAIL_SCOPE=${FASTMAIL_SCOPE}
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Application Configuration
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=3001
      
      # Security Configuration
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    
    networks:
      - proxy
    
    # depends_on:
    #   - supabase-db
    #   - supabase-kong
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth-handler.rule=Host(`oauth.privacy.ranch.sh`)"
      - "traefik.http.routers.oauth-handler.entrypoints=websecure"
      - "traefik.http.routers.oauth-handler.tls=true"
      - "traefik.http.routers.oauth-handler.tls.certresolver=letsencrypt"
      - "traefik.http.services.oauth-handler.loadbalancer.server.port=3001"
      - "traefik.docker.network=proxy"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  webhook-server:
    container_name: privacy-webhook-server
    build: .
    command: npm run webhook
    restart: unless-stopped
    environment:
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Application Configuration
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - WEBHOOK_PORT=3002
      
      # Webhook Configuration
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      
      # Fastmail Configuration (for sync service)
      - FASTMAIL_CLIENT_ID=${FASTMAIL_CLIENT_ID}
      - FASTMAIL_CLIENT_SECRET=${FASTMAIL_CLIENT_SECRET}
      - FASTMAIL_REDIRECT_URI=${FASTMAIL_REDIRECT_URI}
      - FASTMAIL_SCOPE=${FASTMAIL_SCOPE}
      
      # Sync Configuration
      - SYNC_INTERVAL_MINUTES=${SYNC_INTERVAL_MINUTES:-15}
      - BATCH_SIZE=${BATCH_SIZE:-100}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - RETRY_DELAY_MS=${RETRY_DELAY_MS:-5000}
      
      # Security Configuration
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    
    networks:
      - proxy
    
    # depends_on:
    #   - supabase-db
    #   - supabase-kong
    #   - email-sync
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook-server.rule=Host(`webhooks.privacy.ranch.sh`)"
      - "traefik.http.routers.webhook-server.entrypoints=websecure"
      - "traefik.http.routers.webhook-server.tls=true"
      - "traefik.http.routers.webhook-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.webhook-server.loadbalancer.server.port=3002"
      - "traefik.docker.network=proxy"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  email-api:
    container_name: privacy-email-api
    build: .
    command: npm run api
    restart: unless-stopped
    environment:
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Application Configuration
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=3003
      
      # API Configuration
      - API_RATE_LIMIT=${API_RATE_LIMIT:-1000}
      - API_RATE_WINDOW_MS=${API_RATE_WINDOW_MS:-900000}
      
      # Security Configuration
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    
    networks:
      - proxy
    
    # depends_on:
    #   - supabase-db
    #   - supabase-kong
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.email-api.rule=Host(`api.privacy.ranch.sh`)"
      - "traefik.http.routers.email-api.entrypoints=websecure"
      - "traefik.http.routers.email-api.tls=true"
      - "traefik.http.routers.email-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.email-api.loadbalancer.server.port=3003"
      - "traefik.docker.network=proxy"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Use existing Supabase services (running separately)

networks:
  proxy:
    external: true
    name: proxy

volumes:
  email_logs:
    driver: local
  email_data:
    driver: local
  email_backups:
    driver: local
